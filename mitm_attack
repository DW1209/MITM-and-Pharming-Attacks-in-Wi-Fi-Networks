#!/usr/bin/env python3

import netifaces

from math import log2
from scapy.all import ARP, Ether, srp


def obtain_all_client_devices():
    gateway   = netifaces.gateways()['default'][netifaces.AF_INET]
    interface = netifaces.ifaddresses(gateway[1])[netifaces.AF_INET][0]
    netmask   = 32 - sum([int(log2(256 - int(num))) for num in interface['netmask'].split('.')])

    arp       = ARP(pdst=f'{interface["addr"]}/{netmask}')
    broadcast = Ether(dst='ff:ff:ff:ff:ff:ff')
    packet    = broadcast / arp
    results   = srp(packet, timeout=1, verbose=False)[0]
    devices   = [{'ip': recv.psrc, 'mac': recv.hwsrc} for sent, recv in results]

    print('Available devices')
    print('---------------------------------')
    print('IP              MAC')
    print('---------------------------------')
    for device in devices:
        print(f'{device["ip"]:<15s}\t{device["mac"]:<17s}')


def main():
    obtain_all_client_devices()


if __name__ == '__main__':
    main()
